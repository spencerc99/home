---
export interface HeaderActionType {
  name?: string;
  icon: string;
  href: string;
  showName?: boolean;
}

type Props = HeaderActionType;

const { name, icon, href, showName = true } = Astro.props;
const { pathname, href: currentHref } = Astro.url;
const isActive = href === "/" ? pathname === href : pathname.indexOf(href) > -1;
---

<a href={href} class={isActive ? "active" : ""}>
  {
    name &&
      (showName ? (
        <span class="name">{name} </span>
      ) : (
        <span class="tooltip">{name}</span>
      ))
  }
  {icon && <span class="icon">{icon}</span>}
</a>

<style>
  a {
    position: relative;
    display: inline-flex;
    justify-content: center;
    gap: 0.2em;
    align-items: center;
  }

  .tooltip {
    position: absolute;
    text-shadow: none;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    background: #333;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 0.875rem;
    white-space: nowrap;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity 0.2s,
      visibility 0.2s;
  }

  a:hover .tooltip {
    opacity: 1;
    visibility: visible;
  }
</style>
